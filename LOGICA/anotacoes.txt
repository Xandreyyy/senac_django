e-mail: jtsilva@senacrs.com.br
assunto: Exercício (núm.) de Leonidas - DEV1T2024

atalho: win. + L = bloquear monitor
        win. + shift + S = tirar print 

Pilares do pensamento:
    - Decomposição
      *consiste em separar o maior problema em problemas menores;
    -Reconhecimento de padrões
      *permite economizar energia e tempo com tarefas repetitivas;
    -Abstração
      *é a capacidade de simplificar e deixar a escabilidade do projeto mais eficiente;
    -Algoritmo
      *modo de pensar que busca criar instruções que permitem a solução para um problema.

Por que uma empresa procuraria um dev. para criar um programa da própria empresa?
    Para gerar mais lucro. Com a tecnologia é possível garantir mais segurança e a efetividade
    da empresa, pois a velocidade de transição de dados e etc é quase instantânia.

Tipos de dados:
    *Numéricos
       - Inteiros (int)
       - Reais (float)
    *Lógicos
       - Verdadeiro ou Falso (true or false)
    *Literais
       - Caracteres (char)
         --> Para inicializar uma var. "char", usa-se ASPAS SIMPLES ('')
       - Cadeias (string)
         --> Para inicializar uma var. "string", usa-se ASPAS DUPLAS ("")

let salas = []

if(!isNaN(especificarSala)){
    for (let i = 0; i < especificarSala; i++){
        salas.push(criarSalas(i))
    }
}else{
    alert("Você precisa inserir um número!")
}

function criarSalas(n) {
    return{
        n_sala: n,
        defeito: false
    }
}

function mostrarMsg(num) {
    const especificarSala = null
    switch(num){
        case 1:
            return especificarSala = prompt("Insira a quantidade de salas: ")
            break
        case 2:
            return especificarSala = prompt("Agora, por favor, eu te imploro, me diz qual é a sala que deve ter a lâmpada danificada? ")
            break
        default:
            alert(`Erro! O valor de especificarSala é ${especificar}. Apenas 1 ou 2`)
    }
}


